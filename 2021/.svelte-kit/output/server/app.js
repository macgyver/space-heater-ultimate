import { respond } from "@sveltejs/kit/ssr";
import cookie from "cookie";
import { v4 } from "@lukeed/uuid";
function run(fn) {
  return fn();
}
function blank_object() {
  return Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
let current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
function afterUpdate(fn) {
  get_current_component().$$.after_update.push(fn);
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
}
Promise.resolve();
const escaped = {
  '"': "&quot;",
  "'": "&#39;",
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;"
};
function escape(html) {
  return String(html).replace(/["'&<>]/g, (match) => escaped[match]);
}
function each(items, fn) {
  let str = "";
  for (let i = 0; i < items.length; i += 1) {
    str += fn(items[i], i);
  }
  return str;
}
const missing_component = {
  $$render: () => ""
};
function validate_component(component, name) {
  if (!component || !component.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
  }
  return component;
}
let on_destroy;
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(parent_component ? parent_component.$$.context : context || []),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css2) => css2.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  return ` ${name}${value === true ? "" : `=${typeof value === "string" ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}";
const css$5 = {
  code: "#svelte-announcer.svelte-1j55zn5{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n<\/script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t#svelte-announcer {\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttop: 0;\\n\\t\\tclip: rect(0 0 0 0);\\n\\t\\tclip-path: inset(50%);\\n\\t\\toverflow: hidden;\\n\\t\\twhite-space: nowrap;\\n\\t\\twidth: 1px;\\n\\t\\theight: 1px;\\n\\t}\\n</style>"],"names":[],"mappings":"AAsDC,iBAAiB,eAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACZ,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$5);
  {
    stores.page.set(page);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1j55zn5"}">${navigated ? `${escape(title)}` : ``}</div>` : ``}`;
});
function set_paths(paths) {
}
function set_prerendering(value) {
}
const handle = async ({ request, resolve }) => {
  const cookies = cookie.parse(request.headers.cookie || "");
  request.locals.userid = cookies.userid || v4();
  if (request.query.has("_method")) {
    request.method = request.query.get("_method").toUpperCase();
  }
  const response = await resolve(request);
  if (!cookies.userid) {
    response.headers["set-cookie"] = `userid=${request.locals.userid}; Path=/; HttpOnly`;
  }
  return response;
};
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  handle
});
const template = ({ head, body }) => '<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.png" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>\n";
let options = null;
const default_settings = { paths: { "base": "/2021", "assets": "/2021" } };
function init(settings = default_settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/2021/_app/start-3f9f7ed3.js",
      css: ["/2021/_app/assets/start-a8cd1609.css"],
      js: ["/2021/_app/start-3f9f7ed3.js", "/2021/_app/chunks/vendor-3e67615a.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => "/2021/_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2) => {
      if (error2.frame) {
        console.error(error2.frame);
      }
      console.error(error2.stack);
      error2.stack = options.get_stack(error2);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    service_worker: null,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
const d = decodeURIComponent;
const empty = () => ({});
const manifest = {
  assets: [{ "file": "robots.txt", "size": 67, "type": "text/plain" }],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/about\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/about.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/todos\.json$/,
      params: empty,
      load: () => Promise.resolve().then(function() {
        return index_json;
      })
    },
    {
      type: "page",
      pattern: /^\/todos\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/todos/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "endpoint",
      pattern: /^\/todos\/([^/]+?)\.json$/,
      params: (m) => ({ uid: d(m[1]) }),
      load: () => Promise.resolve().then(function() {
        return _uid__json;
      })
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve }) => resolve(request)),
  serverFetch: hooks.serverFetch || fetch
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }),
  "src/routes/about.svelte": () => Promise.resolve().then(function() {
    return about;
  }),
  "src/routes/todos/index.svelte": () => Promise.resolve().then(function() {
    return index;
  })
};
const metadata_lookup = { "src/routes/__layout.svelte": { "entry": "/2021/_app/pages/__layout.svelte-7a980d76.js", "css": ["/2021/_app/assets/pages/__layout.svelte-2febf179.css"], "js": ["/2021/_app/pages/__layout.svelte-7a980d76.js", "/2021/_app/chunks/vendor-3e67615a.js"], "styles": null }, ".svelte-kit/build/components/error.svelte": { "entry": "/2021/_app/error.svelte-1b263411.js", "css": [], "js": ["/2021/_app/error.svelte-1b263411.js", "/2021/_app/chunks/vendor-3e67615a.js"], "styles": null }, "src/routes/index.svelte": { "entry": "/2021/_app/pages/index.svelte-ed1b7b19.js", "css": ["/2021/_app/assets/pages/index.svelte-b205bf21.css"], "js": ["/2021/_app/pages/index.svelte-ed1b7b19.js", "/2021/_app/chunks/vendor-3e67615a.js"], "styles": null }, "src/routes/about.svelte": { "entry": "/2021/_app/pages/about.svelte-fa66754f.js", "css": ["/2021/_app/assets/pages/about.svelte-4db5be0d.css"], "js": ["/2021/_app/pages/about.svelte-fa66754f.js", "/2021/_app/chunks/vendor-3e67615a.js"], "styles": null }, "src/routes/todos/index.svelte": { "entry": "/2021/_app/pages/todos/index.svelte-c9fc8367.js", "css": ["/2021/_app/assets/pages/todos/index.svelte-05e41044.css"], "js": ["/2021/_app/pages/todos/index.svelte-c9fc8367.js", "/2021/_app/chunks/vendor-3e67615a.js"], "styles": null } };
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
function render(request, {
  prerender: prerender2
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender: prerender2 });
}
const base = "https://api.svelte.dev";
async function api(request, resource, data) {
  if (!request.locals.userid) {
    return { status: 401 };
  }
  const res = await fetch(`${base}/${resource}`, {
    method: request.method,
    headers: {
      "content-type": "application/json"
    },
    body: data && JSON.stringify(data)
  });
  if (res.ok && request.method !== "GET" && request.headers.accept !== "application/json") {
    return {
      status: 303,
      headers: {
        location: "/todos"
      }
    };
  }
  return {
    status: res.status,
    body: await res.json()
  };
}
const get = async (request) => {
  const response = await api(request, `todos/${request.locals.userid}`);
  if (response.status === 404) {
    return { body: [] };
  }
  return response;
};
const post = async (request) => {
  const response = await api(request, `todos/${request.locals.userid}`, {
    text: request.body.get("text")
  });
  return response;
};
var index_json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  get,
  post
});
const patch = async (request) => {
  return api(request, `todos/${request.locals.userid}/${request.params.uid}`, {
    text: request.body.get("text"),
    done: request.body.has("done") ? !!request.body.get("done") : void 0
  });
};
const del = async (request) => {
  return api(request, `todos/${request.locals.userid}/${request.params.uid}`);
};
var _uid__json = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  patch,
  del
});
var logo = "/2021/_app/assets/space-heater.1fefce1a.png";
var Header_svelte_svelte_type_style_lang = "img.svelte-1umxkvr{float:right;max-width:25%;height:auto;padding:10px;background:white;border:1px solid var(--fg-color)}";
const css$4 = {
  code: "img.svelte-1umxkvr{float:right;max-width:25%;height:auto;padding:10px;background:white;border:1px solid var(--fg-color)}",
  map: `{"version":3,"file":"Header.svelte","sources":["Header.svelte"],"sourcesContent":["<script lang=\\"ts\\">import logo from './space-heater.png';\\n<\/script>\\n\\n<header>\\n\\t<img src={logo} width=\\"196\\" height=\\"196\\" alt=\\"\\" />\\n\\t<h1>Space Heater</h1>\\n\\t<h2>Elite Mixed Club Ultimate Team</h2>\\n\\t<h3>Washington, DC</h3>\\n\\n\\t<nav>\\n\\t\\t<ul>\\n\\t\\t\\t<li><a href=\\"https://twitter.com/spaceheaterulti/\\">Twitter \u{1F426}</a></li>\\n\\t\\t\\t<!-- <li><a href=\\"2019/\\">2019 team</a></li> -->\\n\\t\\t</ul>\\n\\n\\t\\t<!-- <img src={logo} alt=\\"SvelteKit\\" />\\n\\t\\t<ul>\\n\\t\\t\\t<li class:active={$page.path === '/'}><a sveltekit:prefetch href=\\"/\\">Home</a></li>\\n\\t\\t\\t<li class:active={$page.path === '/about'}><a sveltekit:prefetch href=\\"/about\\">About</a></li>\\n\\t\\t\\t<li class:active={$page.path === '/todos'}><a sveltekit:prefetch href=\\"/todos\\">Todos</a></li>\\n\\t\\t</ul> -->\\n\\t</nav>\\n\\t<hr size=\\"3\\" />\\n</header>\\n\\n<style>\\n\\timg {\\n\\t\\tfloat: right;\\n\\t\\tmax-width: 25%;\\n\\t\\theight: auto;\\n\\t\\tpadding: 10px;\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid var(--fg-color);\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA0BC,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,AAClC,CAAC"}`
};
const Header = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$4);
  return `<header><img${add_attribute("src", logo, 0)} width="${"196"}" height="${"196"}" alt="${""}" class="${"svelte-1umxkvr"}">
	<h1>Space Heater</h1>
	<h2>Elite Mixed Club Ultimate Team</h2>
	<h3>Washington, DC</h3>

	<nav><ul><li><a href="${"https://twitter.com/spaceheaterulti/"}">Twitter \u{1F426}</a></li>
			</ul>

		</nav>
	<hr size="${"3"}">
</header>`;
});
var app = ":root {\n	--bg-color: white;\n	--fg-color: black;\n	background: var(--bg-color);\n	color: var(--fg-color);\n}\n\nbody:before {\n	content: '';\n	position: fixed;\n	top: 0;\n	left: 0;\n	right: 0;\n	bottom: 0;\n	background: var(--fg-color);\n	opacity: 0.035;\n	z-index: -1;\n}\n\n@media (prefers-color-scheme: dark) {\n	:root {\n		--fg-color: white;\n		--bg-color: black;\n	}\n\n	body:before {\n		opacity: 0.07;\n	}\n\n	a,\n	input {\n		filter: invert(1);\n	}\n\n	table,\n	fieldset {\n		border-color: #666;\n	}\n\n	td {\n		border-color: #aaa;\n	}\n}\n";
var __layout_svelte_svelte_type_style_lang = "footer.svelte-1gkn2jk{margin-top:3em}";
const css$3 = {
  code: "footer.svelte-1gkn2jk{margin-top:3em}",
  map: `{"version":3,"file":"__layout.svelte","sources":["__layout.svelte"],"sourcesContent":["<script lang=\\"ts\\">import Header from '$lib/header/Header.svelte';\\nimport '../app.css';\\nfunction handleSubmit(e) {\\n    alert('There is no e-mail list');\\n    e.preventDefault();\\n}\\n<\/script>\\n\\n<Header />\\n\\n<main>\\n\\t<slot />\\n</main>\\n\\n<footer size=\\"-1\\">\\n\\t<form on:submit={handleSubmit}>\\n\\t\\t<fieldset>\\n\\t\\t\\t<legend>Space Heater E-Mail List</legend>\\n\\t\\t\\t<label>\\n\\t\\t\\t\\tEnter your e-mail address\\n\\t\\t\\t\\t<input />\\n\\t\\t\\t</label>\\n\\t\\t\\t<input type=\\"submit\\" />\\n\\t\\t</fieldset>\\n\\t</form>\\n\\tlast updated 20210712 11:08:30Z\\n</footer>\\n\\n<style>\\n\\tfooter {\\n\\t\\tmargin-top: 3em;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA6BC,MAAM,eAAC,CAAC,AACP,UAAU,CAAE,GAAG,AAChB,CAAC"}`
};
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$3);
  return `${validate_component(Header, "Header").$$render($$result, {}, {}, {})}

<main>${slots.default ? slots.default({}) : ``}</main>

<footer size="${"-1"}" class="${"svelte-1gkn2jk"}"><form><fieldset><legend>Space Heater E-Mail List</legend>
			<label>Enter your e-mail address
				<input></label>
			<input type="${"submit"}"></fieldset></form>
	last updated 20210712 11:08:30Z
</footer>`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout
});
function load$1({ error: error2, status }) {
  return { props: { error: error2, status } };
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { status } = $$props;
  let { error: error2 } = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<pre>${escape(error2.message)}</pre>



${error2.frame ? `<pre>${escape(error2.frame)}</pre>` : ``}
${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load: load$1
});
var alan = "/2021/_app/assets/alan.6e9673ac.png";
var anthony = "/2021/_app/assets/anthony.a17967ba.png";
var duke = "/2021/_app/assets/duke.16e64e55.png";
var jfey = "/2021/_app/assets/jfey.524ecdb8.png";
var jonny = "/2021/_app/assets/jonny.25705087.png";
var beezus = "/2021/_app/assets/beezus.7b37b716.png";
var kyle = "/2021/_app/assets/kyle.2fee7838.png";
var sandy = "/2021/_app/assets/sandy.d49ac42f.png";
var hackett = "/2021/_app/assets/hackett.6168f495.png";
var pete = "/2021/_app/assets/pete.f186c4cf.png";
var friend = "/2021/_app/assets/friend.e8fbf564.png";
var chance = "/2021/_app/assets/chance.3a38a52b.png";
var amber = "/2021/_app/assets/amber.373940bf.png";
var ashleigh = "/2021/_app/assets/ashleigh.7634f4df.png";
var austin = "/2021/_app/assets/austin.06035994.png";
var ben = "/2021/_app/assets/ben.c1f8c135.png";
var dane = "/2021/_app/assets/dane.989773fb.png";
var kath = "/2021/_app/assets/kath.952804ad.png";
var kelly = "/2021/_app/assets/kelly.d0263687.png";
var lisi = "/2021/_app/assets/lisi.8a04f351.png";
var molly = "/2021/_app/assets/molly.f6e5c60f.png";
var tucker = "/2021/_app/assets/tucker.70e26c0b.png";
var verena = "/2021/_app/assets/verena.fe181c6f.png";
var nada = "/2021/_app/assets/nada.964583f0.png";
var hannah = "/2021/_app/assets/hannah.a0351f1e.png";
var carly = "/2021/_app/assets/carly.09987d74.png";
var conner = "/2021/_app/assets/conner.bf773df4.png";
var gabe = "/2021/_app/assets/gabe.caf478a0.png";
var gabewebster = "/2021/_app/assets/gabewebster.25629119.png";
var dutchy = "/2021/_app/assets/dutchy.8f594537.png";
var ty = "/2021/_app/assets/ty.218b4430.png";
var Roster_svelte_svelte_type_style_lang = "section.svelte-1wwtwaq{display:inline-flex;flex-wrap:wrap;gap:1.5em}table.svelte-1wwtwaq{max-width:30em;background:var(--bg-color)}h2.svelte-1wwtwaq,h3.svelte-1wwtwaq,h4.svelte-1wwtwaq{margin:0}img.svelte-1wwtwaq{max-width:100%}";
const css$2 = {
  code: "section.svelte-1wwtwaq{display:inline-flex;flex-wrap:wrap;gap:1.5em}table.svelte-1wwtwaq{max-width:30em;background:var(--bg-color)}h2.svelte-1wwtwaq,h3.svelte-1wwtwaq,h4.svelte-1wwtwaq{margin:0}img.svelte-1wwtwaq{max-width:100%}",
  map: `{"version":3,"file":"Roster.svelte","sources":["Roster.svelte"],"sourcesContent":["<script lang=\\"ts\\">import alan from './alan.png';\\nimport anthony from './anthony.png';\\nimport duke from './duke.png';\\nimport jfey from './jfey.png';\\nimport jonny from './jonny.png';\\nimport beezus from './beezus.png';\\nimport kyle from './kyle.png';\\nimport sandy from './sandy.png';\\nimport hackett from './hackett.png';\\nimport pete from './pete.png';\\nimport friend from './friend.png';\\nimport chance from './chance.png';\\nimport amber from './amber.png';\\nimport ashleigh from './ashleigh.png';\\nimport austin from './austin.png';\\nimport ben from './ben.png';\\nimport dane from './dane.png';\\nimport kath from './kath.png';\\nimport kelly from './kelly.png';\\nimport lisi from './lisi.png';\\nimport molly from './molly.png';\\nimport tucker from './tucker.png';\\nimport verena from './verena.png';\\nimport nada from './nada.png';\\nimport hannah from './hannah.png';\\nimport carly from './carly.png';\\nimport conner from './conner.png';\\nimport gabe from './gabe.png';\\nimport gabewebster from './gabewebster.png';\\nimport dutchy from './dutchy.png';\\nimport ty from './ty.png';\\nconst players = [\\n    {\\n        name: 'Alan Kolick',\\n        picture: alan,\\n        dinosaur: 'Oviraptor',\\n        link: 'https://en.wikipedia.org/wiki/Oviraptor',\\n        reason: 'steals eggs',\\n        notes: '3rd year',\\n    },\\n    {\\n        name: 'Anthony McLean',\\n        picture: anthony,\\n        dinosaur: 'Tyrannosaurus Rex',\\n        link: 'https://en.wikipedia.org/wiki/Tyrannosaurus',\\n        reason: 'chomp chomp',\\n        notes: '3rd year',\\n    },\\n    {\\n        name: 'David \u201CDuke\u201D Boylan-Kolchin',\\n        picture: duke,\\n        dinosaur: 'Crocodile',\\n        link: 'https://en.wikipedia.org/wiki/Crocodile',\\n        reason: 'good at lurking; moves surprisingly quickly',\\n        notes: '3rd year',\\n    },\\n    {\\n        name: 'Jenny Fey',\\n        picture: jfey,\\n        dinosaur: 'Styracosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Styracosaurus',\\n        reason: 'has some points',\\n        notes: '3rd year',\\n    },\\n    {\\n        name: 'Jonny Malks',\\n        picture: jonny,\\n        dinosaur: 'Brachiosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Brachiosaurus',\\n        reason: 'slow; eats leaves',\\n        notes: '3rd year',\\n    },\\n    {\\n        name: 'Kelly \u201CBeezus\u201D Hyland',\\n        picture: beezus,\\n        dinosaur: 'Compsognathus',\\n        link: 'https://en.wikipedia.org/wiki/Compsognathus',\\n        reason: 'scratches/bites like a house cat',\\n        notes: '3rd year',\\n    },\\n    {\\n        name: 'Kyle Khalifa',\\n        picture: kyle,\\n        dinosaur: 'dinasor',\\n        link: 'https://www.youtube.com/watch?v=q6EoRBvdVPQ',\\n        reason: 'yeeee',\\n        notes: '3rd year',\\n    },\\n    {\\n        name: 'Sandy Jorgensen',\\n        picture: sandy,\\n        dinosaur: 'Allosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Allosaurus',\\n        reason: '\u201Cdifferent;\u201D will eat you up',\\n        notes: '2nd year',\\n    },\\n    {\\n        name: 'Theresa Hackett',\\n        picture: hackett,\\n        dinosaur: 'Diplodocus',\\n        link: 'https://en.wikipedia.org/wiki/Diplodocus',\\n        reason: 'longest tail of any creature that ever lived?',\\n        notes: '2nd year',\\n    },\\n    {\\n        name: 'Pete MacArthur',\\n        picture: pete,\\n        dinosaur: 'Hadrosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Hadrosaurus',\\n        reason: 'true middle',\\n        notes: '2nd year',\\n    },\\n    {\\n        name: 'Joe Freund',\\n        picture: friend,\\n        dinosaur: 'Argentinosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Argentinosaurus',\\n        reason: 'way bigger',\\n        notes: 'back for more',\\n    },\\n    {\\n        name: 'Chance Cochran',\\n        picture: chance,\\n        dinosaur: 'Irritator',\\n        link: 'https://en.wikipedia.org/wiki/Irritator',\\n        reason: 'a problem',\\n        notes: '\u201Creturner\u201D',\\n    },\\n    {\\n        name: 'Amber Sinicrope',\\n        picture: amber,\\n        dinosaur: 'Ouranosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Ouranosaurus',\\n        reason: 'no, YOU are',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Ashleigh Buch',\\n        picture: ashleigh,\\n        dinoHtml: \`\\n\\t\\t\\t\\t<span style=\\"display:inline-flex;align-items: center; gap: .4em;\\">\\n\\t\\t\\t\\t<span style=\\"display:flex;flex-direction:column; gap: .2em; align-items:center\\">\\n\\t\\t\\t\\t\\t<span>distance raptor</span>\\n\\t\\t\\t\\t\\t<span style=\\"border-top:1px solid currentColor; align-self: stretch\\"></span>\\n\\t\\t\\t\\t\\t<span>time raptor</span>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t=\\n\\t\\t\\t\\t<a href='https://en.wikipedia.org/wiki/Velociraptor'>velociraptor</a>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\`,\\n        reason: 'nerd',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Austin Bartenstein',\\n        picture: austin,\\n        dinosaur: 'Spinosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Spinosaurus',\\n        reason: 'would not be able to kill T Rex but \u201Cwould give good fight\u201D',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Ben Preiss',\\n        picture: ben,\\n        dinosaur: 'Gigantosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Gigantosaurus',\\n        reason: 'regular big',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Dane Warner',\\n        picture: dane,\\n        dinosaur: 'Muttaburrasaurus',\\n        link: 'https://en.wikipedia.org/wiki/Muttaburrasaurus',\\n        reason: 'weird toes; surprisingly long arms',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Kath Ratcliff',\\n        picture: kath,\\n        dinosaur: 'Triceraptops',\\n        link: 'https://en.wikipedia.org/wiki/Muttaburrasaurus',\\n        reason: 'three beautiful horns',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Kelly Ross',\\n        picture: kelly,\\n        dinosaur: 'Apatosaurus',\\n        link: 'https://en.wikipedia.org/wiki/List_of_The_Land_Before_Time_characters#Littlefoot',\\n        reason: '(aka Littlefoot) very long; has main character syndrome',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Lisi Lohre',\\n        picture: lisi,\\n        dinosaur: 'Pterodactylus',\\n        link: 'https://en.wikipedia.org/wiki/Pterodactylus',\\n        reason: 'as close to an owl as a dino can get',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Molly Roy',\\n        picture: molly,\\n        dinosaur: 'Sauralophus',\\n        link: 'https://en.wikipedia.org/wiki/The_Land_Before_Time_(film)',\\n        reason: '\u201Cyep, yep!\u201D',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Nikki \u201CTucker\u201D Ross',\\n        picture: tucker,\\n        dinosaur: 'Ankylosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Ankylosaurus',\\n        reason: 'bone crusher',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Verena Woloson',\\n        picture: verena,\\n        dinosaur: 'Stegosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Stegosaurus',\\n        reason: 'took a buzzfeed quiz',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Nada Tramonte',\\n        picture: nada,\\n        dinosaur: 'Pteronadon',\\n        link: 'https://en.wikipedia.org/wiki/Pteranodon',\\n        reason: 'because pterodactyl is a misnomer',\\n        notes: '1st year',\\n    },\\n    {\\n        name: 'Hannah Boone',\\n        picture: hannah,\\n        dinosaur: 'Fabrosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Fabrosaurus',\\n        reason: 'might not be real',\\n        notes: 'practice squad',\\n    },\\n    {\\n        name: 'Carly Campana',\\n        picture: carly,\\n        dinosaur: 'Iguanadon',\\n        reason: 'thumb spikes; prehensile fifth finger (aka thumb)',\\n        notes: 'practice squad',\\n    },\\n    {\\n        name: 'Conner Fox',\\n        picture: conner,\\n        dinosaur: 'Plesiosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Plesiosaurus',\\n        reason: 'comfortable on the water',\\n        notes: 'practice squad',\\n    },\\n    {\\n        name: 'Gabe Webster',\\n        picture: gabewebster,\\n        dinosaur: 'Struthiomimus',\\n        link: 'https://en.wikipedia.org/wiki/Struthiomimus',\\n        reason: 'funky',\\n        notes: 'practice squad',\\n    },\\n    {\\n        name: 'Gabe Westegren',\\n        picture: gabe,\\n        dinosaur: 'Archeopteryx',\\n        link: 'https://en.wikipedia.org/wiki/Archaeopteryx',\\n        reason: 'the very first bird',\\n        notes: 'practice squad',\\n    },\\n    {\\n        name: 'Alex \u201CDutchy\u201D Ghesquiere',\\n        picture: dutchy,\\n        dinosaur: 'Troodon',\\n        link: 'https://dtrain.fandom.com/wiki/Troodon',\\n        reason: 'conductor of children',\\n        notes: 'coachy pal',\\n    },\\n    {\\n        name: 'Ty Aderhold',\\n        picture: ty,\\n        dinosaur: 'Pachycephalosaurus',\\n        link: 'https://en.wikipedia.org/wiki/Pachycephalosaurus',\\n        reason: 'thick head, full of brains',\\n        notes: 'coachy pal',\\n    },\\n];\\n<\/script>\\n\\n<div>\\n\\t<h1>2021 Dinos</h1>\\n\\n\\t<section>\\n\\t\\t{#each players as { name, link, picture, dinoHtml, dinosaur, reason, notes }, i}\\n\\t\\t\\t<table border=\\"1\\" cellpadding=\\"8\\">\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td><h2>{name}</h2></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<h3>\\n\\t\\t\\t\\t\\t\\t\\t{#if dinoHtml}\\n\\t\\t\\t\\t\\t\\t\\t\\t{@html dinoHtml}\\n\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t<a href={link} target=\\"_blank\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{dinosaur}\\n\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr> <td><h4>{reason}</h4></td></tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>{notes}</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td><img loading=\\"lazy\\" width=\\"300\\" src={picture} alt=\\"\\" /></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</table>\\n\\t\\t{/each}\\n\\t</section>\\n</div>\\n\\n<style>\\n\\tsection {\\n\\t\\tdisplay: inline-flex;\\n\\t\\tflex-wrap: wrap;\\n\\t\\tgap: 1.5em;\\n\\t}\\n\\n\\ttable {\\n\\t\\tmax-width: 30em;\\n\\t\\tbackground: var(--bg-color);\\n\\t}\\n\\n\\th2,\\n\\th3,\\n\\th4 {\\n\\t\\tmargin: 0;\\n\\t}\\n\\n\\timg {\\n\\t\\tmax-width: 100%;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AAsUC,OAAO,eAAC,CAAC,AACR,OAAO,CAAE,WAAW,CACpB,SAAS,CAAE,IAAI,CACf,GAAG,CAAE,KAAK,AACX,CAAC,AAED,KAAK,eAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,UAAU,CAAC,AAC5B,CAAC,AAED,iBAAE,CACF,iBAAE,CACF,EAAE,eAAC,CAAC,AACH,MAAM,CAAE,CAAC,AACV,CAAC,AAED,GAAG,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AAChB,CAAC"}`
};
const Roster = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const players = [
    {
      name: "Alan Kolick",
      picture: alan,
      dinosaur: "Oviraptor",
      link: "https://en.wikipedia.org/wiki/Oviraptor",
      reason: "steals eggs",
      notes: "3rd year"
    },
    {
      name: "Anthony McLean",
      picture: anthony,
      dinosaur: "Tyrannosaurus Rex",
      link: "https://en.wikipedia.org/wiki/Tyrannosaurus",
      reason: "chomp chomp",
      notes: "3rd year"
    },
    {
      name: "David \u201CDuke\u201D Boylan-Kolchin",
      picture: duke,
      dinosaur: "Crocodile",
      link: "https://en.wikipedia.org/wiki/Crocodile",
      reason: "good at lurking; moves surprisingly quickly",
      notes: "3rd year"
    },
    {
      name: "Jenny Fey",
      picture: jfey,
      dinosaur: "Styracosaurus",
      link: "https://en.wikipedia.org/wiki/Styracosaurus",
      reason: "has some points",
      notes: "3rd year"
    },
    {
      name: "Jonny Malks",
      picture: jonny,
      dinosaur: "Brachiosaurus",
      link: "https://en.wikipedia.org/wiki/Brachiosaurus",
      reason: "slow; eats leaves",
      notes: "3rd year"
    },
    {
      name: "Kelly \u201CBeezus\u201D Hyland",
      picture: beezus,
      dinosaur: "Compsognathus",
      link: "https://en.wikipedia.org/wiki/Compsognathus",
      reason: "scratches/bites like a house cat",
      notes: "3rd year"
    },
    {
      name: "Kyle Khalifa",
      picture: kyle,
      dinosaur: "dinasor",
      link: "https://www.youtube.com/watch?v=q6EoRBvdVPQ",
      reason: "yeeee",
      notes: "3rd year"
    },
    {
      name: "Sandy Jorgensen",
      picture: sandy,
      dinosaur: "Allosaurus",
      link: "https://en.wikipedia.org/wiki/Allosaurus",
      reason: "\u201Cdifferent;\u201D will eat you up",
      notes: "2nd year"
    },
    {
      name: "Theresa Hackett",
      picture: hackett,
      dinosaur: "Diplodocus",
      link: "https://en.wikipedia.org/wiki/Diplodocus",
      reason: "longest tail of any creature that ever lived?",
      notes: "2nd year"
    },
    {
      name: "Pete MacArthur",
      picture: pete,
      dinosaur: "Hadrosaurus",
      link: "https://en.wikipedia.org/wiki/Hadrosaurus",
      reason: "true middle",
      notes: "2nd year"
    },
    {
      name: "Joe Freund",
      picture: friend,
      dinosaur: "Argentinosaurus",
      link: "https://en.wikipedia.org/wiki/Argentinosaurus",
      reason: "way bigger",
      notes: "back for more"
    },
    {
      name: "Chance Cochran",
      picture: chance,
      dinosaur: "Irritator",
      link: "https://en.wikipedia.org/wiki/Irritator",
      reason: "a problem",
      notes: "\u201Creturner\u201D"
    },
    {
      name: "Amber Sinicrope",
      picture: amber,
      dinosaur: "Ouranosaurus",
      link: "https://en.wikipedia.org/wiki/Ouranosaurus",
      reason: "no, YOU are",
      notes: "1st year"
    },
    {
      name: "Ashleigh Buch",
      picture: ashleigh,
      dinoHtml: `
				<span style="display:inline-flex;align-items: center; gap: .4em;">
				<span style="display:flex;flex-direction:column; gap: .2em; align-items:center">
					<span>distance raptor</span>
					<span style="border-top:1px solid currentColor; align-self: stretch"></span>
					<span>time raptor</span>
				</span>
				=
				<a href='https://en.wikipedia.org/wiki/Velociraptor'>velociraptor</a>
				</span>
			`,
      reason: "nerd",
      notes: "1st year"
    },
    {
      name: "Austin Bartenstein",
      picture: austin,
      dinosaur: "Spinosaurus",
      link: "https://en.wikipedia.org/wiki/Spinosaurus",
      reason: "would not be able to kill T Rex but \u201Cwould give good fight\u201D",
      notes: "1st year"
    },
    {
      name: "Ben Preiss",
      picture: ben,
      dinosaur: "Gigantosaurus",
      link: "https://en.wikipedia.org/wiki/Gigantosaurus",
      reason: "regular big",
      notes: "1st year"
    },
    {
      name: "Dane Warner",
      picture: dane,
      dinosaur: "Muttaburrasaurus",
      link: "https://en.wikipedia.org/wiki/Muttaburrasaurus",
      reason: "weird toes; surprisingly long arms",
      notes: "1st year"
    },
    {
      name: "Kath Ratcliff",
      picture: kath,
      dinosaur: "Triceraptops",
      link: "https://en.wikipedia.org/wiki/Muttaburrasaurus",
      reason: "three beautiful horns",
      notes: "1st year"
    },
    {
      name: "Kelly Ross",
      picture: kelly,
      dinosaur: "Apatosaurus",
      link: "https://en.wikipedia.org/wiki/List_of_The_Land_Before_Time_characters#Littlefoot",
      reason: "(aka Littlefoot) very long; has main character syndrome",
      notes: "1st year"
    },
    {
      name: "Lisi Lohre",
      picture: lisi,
      dinosaur: "Pterodactylus",
      link: "https://en.wikipedia.org/wiki/Pterodactylus",
      reason: "as close to an owl as a dino can get",
      notes: "1st year"
    },
    {
      name: "Molly Roy",
      picture: molly,
      dinosaur: "Sauralophus",
      link: "https://en.wikipedia.org/wiki/The_Land_Before_Time_(film)",
      reason: "\u201Cyep, yep!\u201D",
      notes: "1st year"
    },
    {
      name: "Nikki \u201CTucker\u201D Ross",
      picture: tucker,
      dinosaur: "Ankylosaurus",
      link: "https://en.wikipedia.org/wiki/Ankylosaurus",
      reason: "bone crusher",
      notes: "1st year"
    },
    {
      name: "Verena Woloson",
      picture: verena,
      dinosaur: "Stegosaurus",
      link: "https://en.wikipedia.org/wiki/Stegosaurus",
      reason: "took a buzzfeed quiz",
      notes: "1st year"
    },
    {
      name: "Nada Tramonte",
      picture: nada,
      dinosaur: "Pteronadon",
      link: "https://en.wikipedia.org/wiki/Pteranodon",
      reason: "because pterodactyl is a misnomer",
      notes: "1st year"
    },
    {
      name: "Hannah Boone",
      picture: hannah,
      dinosaur: "Fabrosaurus",
      link: "https://en.wikipedia.org/wiki/Fabrosaurus",
      reason: "might not be real",
      notes: "practice squad"
    },
    {
      name: "Carly Campana",
      picture: carly,
      dinosaur: "Iguanadon",
      reason: "thumb spikes; prehensile fifth finger (aka thumb)",
      notes: "practice squad"
    },
    {
      name: "Conner Fox",
      picture: conner,
      dinosaur: "Plesiosaurus",
      link: "https://en.wikipedia.org/wiki/Plesiosaurus",
      reason: "comfortable on the water",
      notes: "practice squad"
    },
    {
      name: "Gabe Webster",
      picture: gabewebster,
      dinosaur: "Struthiomimus",
      link: "https://en.wikipedia.org/wiki/Struthiomimus",
      reason: "funky",
      notes: "practice squad"
    },
    {
      name: "Gabe Westegren",
      picture: gabe,
      dinosaur: "Archeopteryx",
      link: "https://en.wikipedia.org/wiki/Archaeopteryx",
      reason: "the very first bird",
      notes: "practice squad"
    },
    {
      name: "Alex \u201CDutchy\u201D Ghesquiere",
      picture: dutchy,
      dinosaur: "Troodon",
      link: "https://dtrain.fandom.com/wiki/Troodon",
      reason: "conductor of children",
      notes: "coachy pal"
    },
    {
      name: "Ty Aderhold",
      picture: ty,
      dinosaur: "Pachycephalosaurus",
      link: "https://en.wikipedia.org/wiki/Pachycephalosaurus",
      reason: "thick head, full of brains",
      notes: "coachy pal"
    }
  ];
  $$result.css.add(css$2);
  return `<div><h1>2021 Dinos</h1>

	<section class="${"svelte-1wwtwaq"}">${each(players, ({ name, link, picture, dinoHtml, dinosaur, reason, notes }, i) => `<table border="${"1"}" cellpadding="${"8"}" class="${"svelte-1wwtwaq"}"><tr><td><h2 class="${"svelte-1wwtwaq"}">${escape(name)}</h2></td></tr>
				<tr><td><h3 class="${"svelte-1wwtwaq"}">${dinoHtml ? `<!-- HTML_TAG_START -->${dinoHtml}<!-- HTML_TAG_END -->` : `<a${add_attribute("href", link, 0)} target="${"_blank"}">${escape(dinosaur)}
								</a>`}</h3>
					</td></tr>
				<tr><td><h4 class="${"svelte-1wwtwaq"}">${escape(reason)}</h4></td></tr>
				<tr><td>${escape(notes)}</td></tr>
				<tr><td><img loading="${"lazy"}" width="${"300"}"${add_attribute("src", picture, 0)} alt="${""}" class="${"svelte-1wwtwaq"}"></td></tr>
			</table>`)}</section>
</div>`;
});
const prerender$1 = true;
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${$$result.head += `${$$result.title = `<title>Home</title>`, ""}`, ""}

<div>${validate_component(Roster, "Roster").$$render($$result, {}, {}, {})}
</div>`;
});
var index$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes,
  prerender: prerender$1
});
const browser = false;
const dev = false;
var about_svelte_svelte_type_style_lang = ".content.svelte-cf77e8{width:100%;max-width:var(--column-width);margin:var(--column-margin-top) auto 0 auto}";
const css$1 = {
  code: ".content.svelte-cf77e8{width:100%;max-width:var(--column-width);margin:var(--column-margin-top) auto 0 auto}",
  map: `{"version":3,"file":"about.svelte","sources":["about.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\timport { browser, dev } from '$app/env';\\n\\n\\t// we don't need any JS on this page, though we'll load\\n\\t// it in dev so that we get hot module replacement...\\n\\texport const hydrate = dev;\\n\\n\\t// ...but if the client-side router is already loaded\\n\\t// (i.e. we came here from elsewhere in the app), use it\\n\\texport const router = browser;\\n\\n\\t// since there's no dynamic data here, we can prerender\\n\\t// it so that it gets served as a static asset in prod\\n\\texport const prerender = true;\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>About</title>\\n</svelte:head>\\n\\n<div class=\\"content\\">\\n\\t<h1>About this app</h1>\\n\\n\\t<p>\\n\\t\\tThis is a <a href=\\"https://kit.svelte.dev\\">SvelteKit</a> app. You can make your own by typing the\\n\\t\\tfollowing into your command line and following the prompts:\\n\\t</p>\\n\\n\\t<!-- TODO lose the @next! -->\\n\\t<pre>npm init svelte@next</pre>\\n\\n\\t<p>\\n\\t\\tThe page you're looking at is purely static HTML, with no client-side interactivity needed.\\n\\t\\tBecause of that, we don't need to load any JavaScript. Try viewing the page's source, or opening\\n\\t\\tthe devtools network panel and reloading.\\n\\t</p>\\n\\n\\t<p>\\n\\t\\tThe <a href=\\"/todos\\">TODOs</a> page illustrates SvelteKit's data loading and form handling. Try using\\n\\t\\tit with JavaScript disabled!\\n\\t</p>\\n</div>\\n\\n<style>\\n\\t.content {\\n\\t\\twidth: 100%;\\n\\t\\tmax-width: var(--column-width);\\n\\t\\tmargin: var(--column-margin-top) auto 0 auto;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA4CC,QAAQ,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,cAAc,CAAC,CAC9B,MAAM,CAAE,IAAI,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,AAC7C,CAAC"}`
};
const hydrate = dev;
const router = browser;
const prerender = true;
const About = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css$1);
  return `${$$result.head += `${$$result.title = `<title>About</title>`, ""}`, ""}

<div class="${"content svelte-cf77e8"}"><h1>About this app</h1>

	<p>This is a <a href="${"https://kit.svelte.dev"}">SvelteKit</a> app. You can make your own by typing the
		following into your command line and following the prompts:
	</p>

	
	<pre>npm init svelte@next</pre>

	<p>The page you&#39;re looking at is purely static HTML, with no client-side interactivity needed.
		Because of that, we don&#39;t need to load any JavaScript. Try viewing the page&#39;s source, or opening
		the devtools network panel and reloading.
	</p>

	<p>The <a href="${"/todos"}">TODOs</a> page illustrates SvelteKit&#39;s data loading and form handling. Try using
		it with JavaScript disabled!
	</p>
</div>`;
});
var about = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": About,
  hydrate,
  router,
  prerender
});
var index_svelte_svelte_type_style_lang = `.todos.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{width:100%;max-width:var(--column-width);margin:var(--column-margin-top) auto 0 auto;line-height:1}.new.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{margin:0 0 0.5rem 0}input.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{border:1px solid transparent}input.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:focus-visible{box-shadow:inset 1px 1px 6px rgba(0, 0, 0, 0.1);border:1px solid #ff3e00 !important;outline:none}.new.svelte-dmxqmd input.svelte-dmxqmd.svelte-dmxqmd{font-size:28px;width:100%;padding:0.5em 1em 0.3em 1em;box-sizing:border-box;background:rgba(255, 255, 255, 0.05);border-radius:8px;text-align:center}.todo.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{display:grid;grid-template-columns:2rem 1fr 2rem;grid-gap:0.5rem;align-items:center;margin:0 0 0.5rem 0;padding:0.5rem;background-color:white;border-radius:8px;filter:drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.1));transform:translate(-1px, -1px);transition:filter 0.2s, transform 0.2s}.done.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{transform:none;opacity:0.4;filter:drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.1))}form.text.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{position:relative;display:flex;align-items:center;flex:1}.todo.svelte-dmxqmd input.svelte-dmxqmd.svelte-dmxqmd{flex:1;padding:0.5em 2em 0.5em 0.8em;border-radius:3px}.todo.svelte-dmxqmd button.svelte-dmxqmd.svelte-dmxqmd{width:2em;height:2em;border:none;background-color:transparent;background-position:50% 50%;background-repeat:no-repeat}button.toggle.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{border:1px solid rgba(0, 0, 0, 0.2);border-radius:50%;box-sizing:border-box;background-size:1em auto}.done.svelte-dmxqmd .toggle.svelte-dmxqmd.svelte-dmxqmd{background-image:url("data:image/svg+xml,%3Csvg width='22' height='16' viewBox='0 0 22 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.5 1.5L7.4375 14.5L1.5 8.5909' stroke='%23676778' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E")}.delete.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{background-image:url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4.5 5V22H19.5V5H4.5Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M10 10V16.5' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M14 10V16.5' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M2 5H22' stroke='%23676778' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M8 5L9.6445 2H14.3885L16 5H8Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3C/svg%3E%0A");opacity:0.2}.delete.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:hover,.delete.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:focus{transition:opacity 0.2s;opacity:1}.save.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{position:absolute;right:0;opacity:0;background-image:url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.5 2H3.5C2.67158 2 2 2.67157 2 3.5V20.5C2 21.3284 2.67158 22 3.5 22H20.5C21.3284 22 22 21.3284 22 20.5V3.5C22 2.67157 21.3284 2 20.5 2Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M17 2V11H7.5V2H17Z' fill='white' stroke='white' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M13.5 5.5V7.5' stroke='%23676778' stroke-width='1.5' stroke-linecap='round'/%3E%3Cpath d='M5.99844 2H18.4992' stroke='%23676778' stroke-width='1.5' stroke-linecap='round'/%3E%3C/svg%3E%0A")}.todo.svelte-dmxqmd input.svelte-dmxqmd:focus+.save.svelte-dmxqmd,.save.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:focus{transition:opacity 0.2s;opacity:1}`;
const css = {
  code: `.todos.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{width:100%;max-width:var(--column-width);margin:var(--column-margin-top) auto 0 auto;line-height:1}.new.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{margin:0 0 0.5rem 0}input.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{border:1px solid transparent}input.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:focus-visible{box-shadow:inset 1px 1px 6px rgba(0, 0, 0, 0.1);border:1px solid #ff3e00 !important;outline:none}.new.svelte-dmxqmd input.svelte-dmxqmd.svelte-dmxqmd{font-size:28px;width:100%;padding:0.5em 1em 0.3em 1em;box-sizing:border-box;background:rgba(255, 255, 255, 0.05);border-radius:8px;text-align:center}.todo.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{display:grid;grid-template-columns:2rem 1fr 2rem;grid-gap:0.5rem;align-items:center;margin:0 0 0.5rem 0;padding:0.5rem;background-color:white;border-radius:8px;filter:drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.1));transform:translate(-1px, -1px);transition:filter 0.2s, transform 0.2s}.done.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{transform:none;opacity:0.4;filter:drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.1))}form.text.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{position:relative;display:flex;align-items:center;flex:1}.todo.svelte-dmxqmd input.svelte-dmxqmd.svelte-dmxqmd{flex:1;padding:0.5em 2em 0.5em 0.8em;border-radius:3px}.todo.svelte-dmxqmd button.svelte-dmxqmd.svelte-dmxqmd{width:2em;height:2em;border:none;background-color:transparent;background-position:50% 50%;background-repeat:no-repeat}button.toggle.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{border:1px solid rgba(0, 0, 0, 0.2);border-radius:50%;box-sizing:border-box;background-size:1em auto}.done.svelte-dmxqmd .toggle.svelte-dmxqmd.svelte-dmxqmd{background-image:url("data:image/svg+xml,%3Csvg width='22' height='16' viewBox='0 0 22 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.5 1.5L7.4375 14.5L1.5 8.5909' stroke='%23676778' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E")}.delete.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{background-image:url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4.5 5V22H19.5V5H4.5Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M10 10V16.5' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M14 10V16.5' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M2 5H22' stroke='%23676778' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M8 5L9.6445 2H14.3885L16 5H8Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3C/svg%3E%0A");opacity:0.2}.delete.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:hover,.delete.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:focus{transition:opacity 0.2s;opacity:1}.save.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd{position:absolute;right:0;opacity:0;background-image:url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.5 2H3.5C2.67158 2 2 2.67157 2 3.5V20.5C2 21.3284 2.67158 22 3.5 22H20.5C21.3284 22 22 21.3284 22 20.5V3.5C22 2.67157 21.3284 2 20.5 2Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M17 2V11H7.5V2H17Z' fill='white' stroke='white' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M13.5 5.5V7.5' stroke='%23676778' stroke-width='1.5' stroke-linecap='round'/%3E%3Cpath d='M5.99844 2H18.4992' stroke='%23676778' stroke-width='1.5' stroke-linecap='round'/%3E%3C/svg%3E%0A")}.todo.svelte-dmxqmd input.svelte-dmxqmd:focus+.save.svelte-dmxqmd,.save.svelte-dmxqmd.svelte-dmxqmd.svelte-dmxqmd:focus{transition:opacity 0.2s;opacity:1}`,
  map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\" lang=\\"ts\\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\n    return new (P || (P = Promise))(function (resolve, reject) {\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\n    });\\n};\\nimport { enhance } from '$lib/form';\\n;\\n// see https://kit.svelte.dev/docs#loading\\nexport const load = ({ fetch }) => __awaiter(void 0, void 0, void 0, function* () {\\n    const res = yield fetch('/todos.json');\\n    if (res.ok) {\\n        const todos = yield res.json();\\n        return {\\n            props: { todos }\\n        };\\n    }\\n    const { message } = yield res.json();\\n    return {\\n        error: new Error(message)\\n    };\\n});\\n<\/script>\\n\\n<script lang=\\"ts\\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\n    return new (P || (P = Promise))(function (resolve, reject) {\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\n    });\\n};\\nimport { scale } from 'svelte/transition';\\nimport { flip } from 'svelte/animate';\\nexport let todos;\\nfunction patch(res) {\\n    return __awaiter(this, void 0, void 0, function* () {\\n        const todo = yield res.json();\\n        todos = todos.map((t) => {\\n            if (t.uid === todo.uid)\\n                return todo;\\n            return t;\\n        });\\n    });\\n}\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Todos</title>\\n</svelte:head>\\n\\n<div class=\\"todos\\">\\n\\t<h1>Todos</h1>\\n\\n\\t<form\\n\\t\\tclass=\\"new\\"\\n\\t\\taction=\\"/todos.json\\"\\n\\t\\tmethod=\\"post\\"\\n\\t\\tuse:enhance={{\\n\\t\\t\\tresult: async (res, form) => {\\n\\t\\t\\t\\tconst created = await res.json();\\n\\t\\t\\t\\ttodos = [...todos, created];\\n\\n\\t\\t\\t\\tform.reset();\\n\\t\\t\\t}\\n\\t\\t}}\\n\\t>\\n\\t\\t<input name=\\"text\\" aria-label=\\"Add todo\\" placeholder=\\"+ tap to add a todo\\" />\\n\\t</form>\\n\\n\\t{#each todos as todo (todo.uid)}\\n\\t\\t<div\\n\\t\\t\\tclass=\\"todo\\"\\n\\t\\t\\tclass:done={todo.done}\\n\\t\\t\\ttransition:scale|local={{ start: 0.7 }}\\n\\t\\t\\tanimate:flip={{ duration: 200 }}\\n\\t\\t>\\n\\t\\t\\t<form\\n\\t\\t\\t\\taction=\\"/todos/{todo.uid}.json?_method=patch\\"\\n\\t\\t\\t\\tmethod=\\"post\\"\\n\\t\\t\\t\\tuse:enhance={{\\n\\t\\t\\t\\t\\tpending: (data) => {\\n\\t\\t\\t\\t\\t\\ttodo.done = !!data.get('done');\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\tresult: patch\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<input type=\\"hidden\\" name=\\"done\\" value={todo.done ? '' : 'true'} />\\n\\t\\t\\t\\t<button class=\\"toggle\\" aria-label=\\"Mark todo as {todo.done ? 'not done' : 'done'}\\" />\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<form\\n\\t\\t\\t\\tclass=\\"text\\"\\n\\t\\t\\t\\taction=\\"/todos/{todo.uid}.json?_method=patch\\"\\n\\t\\t\\t\\tmethod=\\"post\\"\\n\\t\\t\\t\\tuse:enhance={{\\n\\t\\t\\t\\t\\tresult: patch\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<input aria-label=\\"Edit todo\\" type=\\"text\\" name=\\"text\\" value={todo.text} />\\n\\t\\t\\t\\t<button class=\\"save\\" aria-label=\\"Save todo\\" />\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<form\\n\\t\\t\\t\\taction=\\"/todos/{todo.uid}.json?_method=delete\\"\\n\\t\\t\\t\\tmethod=\\"post\\"\\n\\t\\t\\t\\tuse:enhance={{\\n\\t\\t\\t\\t\\tresult: () => {\\n\\t\\t\\t\\t\\t\\ttodos = todos.filter((t) => t.uid !== todo.uid);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<button class=\\"delete\\" aria-label=\\"Delete todo\\" />\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t{/each}\\n</div>\\n\\n<style>\\n\\t.todos {\\n\\t\\twidth: 100%;\\n\\t\\tmax-width: var(--column-width);\\n\\t\\tmargin: var(--column-margin-top) auto 0 auto;\\n\\t\\tline-height: 1;\\n\\t}\\n\\n\\t.new {\\n\\t\\tmargin: 0 0 0.5rem 0;\\n\\t}\\n\\n\\tinput {\\n\\t\\tborder: 1px solid transparent;\\n\\t}\\n\\n\\tinput:focus-visible {\\n\\t\\tbox-shadow: inset 1px 1px 6px rgba(0, 0, 0, 0.1);\\n\\t\\tborder: 1px solid #ff3e00 !important;\\n\\t\\toutline: none;\\n\\t}\\n\\n\\t.new input {\\n\\t\\tfont-size: 28px;\\n\\t\\twidth: 100%;\\n\\t\\tpadding: 0.5em 1em 0.3em 1em;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tbackground: rgba(255, 255, 255, 0.05);\\n\\t\\tborder-radius: 8px;\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t.todo {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: 2rem 1fr 2rem;\\n\\t\\tgrid-gap: 0.5rem;\\n\\t\\talign-items: center;\\n\\t\\tmargin: 0 0 0.5rem 0;\\n\\t\\tpadding: 0.5rem;\\n\\t\\tbackground-color: white;\\n\\t\\tborder-radius: 8px;\\n\\t\\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.1));\\n\\t\\ttransform: translate(-1px, -1px);\\n\\t\\ttransition: filter 0.2s, transform 0.2s;\\n\\t}\\n\\n\\t.done {\\n\\t\\ttransform: none;\\n\\t\\topacity: 0.4;\\n\\t\\tfilter: drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.1));\\n\\t}\\n\\n\\tform.text {\\n\\t\\tposition: relative;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tflex: 1;\\n\\t}\\n\\n\\t.todo input {\\n\\t\\tflex: 1;\\n\\t\\tpadding: 0.5em 2em 0.5em 0.8em;\\n\\t\\tborder-radius: 3px;\\n\\t}\\n\\n\\t.todo button {\\n\\t\\twidth: 2em;\\n\\t\\theight: 2em;\\n\\t\\tborder: none;\\n\\t\\tbackground-color: transparent;\\n\\t\\tbackground-position: 50% 50%;\\n\\t\\tbackground-repeat: no-repeat;\\n\\t}\\n\\n\\tbutton.toggle {\\n\\t\\tborder: 1px solid rgba(0, 0, 0, 0.2);\\n\\t\\tborder-radius: 50%;\\n\\t\\tbox-sizing: border-box;\\n\\t\\tbackground-size: 1em auto;\\n\\t}\\n\\n\\t.done .toggle {\\n\\t\\tbackground-image: url(\\"data:image/svg+xml,%3Csvg width='22' height='16' viewBox='0 0 22 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.5 1.5L7.4375 14.5L1.5 8.5909' stroke='%23676778' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E\\");\\n\\t}\\n\\n\\t.delete {\\n\\t\\tbackground-image: url(\\"data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4.5 5V22H19.5V5H4.5Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M10 10V16.5' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M14 10V16.5' stroke='white' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M2 5H22' stroke='%23676778' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M8 5L9.6445 2H14.3885L16 5H8Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3C/svg%3E%0A\\");\\n\\t\\topacity: 0.2;\\n\\t}\\n\\n\\t.delete:hover,\\n\\t.delete:focus {\\n\\t\\ttransition: opacity 0.2s;\\n\\t\\topacity: 1;\\n\\t}\\n\\n\\t.save {\\n\\t\\tposition: absolute;\\n\\t\\tright: 0;\\n\\t\\topacity: 0;\\n\\t\\tbackground-image: url(\\"data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M20.5 2H3.5C2.67158 2 2 2.67157 2 3.5V20.5C2 21.3284 2.67158 22 3.5 22H20.5C21.3284 22 22 21.3284 22 20.5V3.5C22 2.67157 21.3284 2 20.5 2Z' fill='%23676778' stroke='%23676778' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M17 2V11H7.5V2H17Z' fill='white' stroke='white' stroke-width='1.5' stroke-linejoin='round'/%3E%3Cpath d='M13.5 5.5V7.5' stroke='%23676778' stroke-width='1.5' stroke-linecap='round'/%3E%3Cpath d='M5.99844 2H18.4992' stroke='%23676778' stroke-width='1.5' stroke-linecap='round'/%3E%3C/svg%3E%0A\\");\\n\\t}\\n\\n\\t.todo input:focus + .save,\\n\\t.save:focus {\\n\\t\\ttransition: opacity 0.2s;\\n\\t\\topacity: 1;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA2HC,MAAM,0CAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,cAAc,CAAC,CAC9B,MAAM,CAAE,IAAI,mBAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAC5C,WAAW,CAAE,CAAC,AACf,CAAC,AAED,IAAI,0CAAC,CAAC,AACL,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,AACrB,CAAC,AAED,KAAK,0CAAC,CAAC,AACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,AAC9B,CAAC,AAED,+CAAK,cAAc,AAAC,CAAC,AACpB,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAChD,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CACpC,OAAO,CAAE,IAAI,AACd,CAAC,AAED,kBAAI,CAAC,KAAK,4BAAC,CAAC,AACX,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAC5B,UAAU,CAAE,UAAU,CACtB,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CACrC,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,AACnB,CAAC,AAED,KAAK,0CAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CACpC,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CACpB,OAAO,CAAE,MAAM,CACf,gBAAgB,CAAE,KAAK,CACvB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACnD,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,UAAU,CAAE,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,AACxC,CAAC,AAED,KAAK,0CAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AACpD,CAAC,AAED,IAAI,KAAK,0CAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,IAAI,CAAE,CAAC,AACR,CAAC,AAED,mBAAK,CAAC,KAAK,4BAAC,CAAC,AACZ,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAC9B,aAAa,CAAE,GAAG,AACnB,CAAC,AAED,mBAAK,CAAC,MAAM,4BAAC,CAAC,AACb,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,WAAW,CAC7B,mBAAmB,CAAE,GAAG,CAAC,GAAG,CAC5B,iBAAiB,CAAE,SAAS,AAC7B,CAAC,AAED,MAAM,OAAO,0CAAC,CAAC,AACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,UAAU,CACtB,eAAe,CAAE,GAAG,CAAC,IAAI,AAC1B,CAAC,AAED,mBAAK,CAAC,OAAO,4BAAC,CAAC,AACd,gBAAgB,CAAE,IAAI,uQAAuQ,CAAC,AAC/R,CAAC,AAED,OAAO,0CAAC,CAAC,AACR,gBAAgB,CAAE,IAAI,yrBAAyrB,CAAC,CAChtB,OAAO,CAAE,GAAG,AACb,CAAC,AAED,iDAAO,MAAM,CACb,iDAAO,MAAM,AAAC,CAAC,AACd,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,OAAO,CAAE,CAAC,AACX,CAAC,AAED,KAAK,0CAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,OAAO,CAAE,CAAC,CACV,gBAAgB,CAAE,IAAI,gpBAAgpB,CAAC,AACxqB,CAAC,AAED,mBAAK,CAAC,mBAAK,MAAM,CAAG,mBAAK,CACzB,+CAAK,MAAM,AAAC,CAAC,AACZ,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,OAAO,CAAE,CAAC,AACX,CAAC"}`
};
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
const load = ({ fetch: fetch2 }) => __awaiter(void 0, void 0, void 0, function* () {
  const res = yield fetch2("/todos.json");
  if (res.ok) {
    const todos = yield res.json();
    return { props: { todos } };
  }
  const { message } = yield res.json();
  return { error: new Error(message) };
});
const Todos = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  (function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  });
  let { todos } = $$props;
  if ($$props.todos === void 0 && $$bindings.todos && todos !== void 0)
    $$bindings.todos(todos);
  $$result.css.add(css);
  return `${$$result.head += `${$$result.title = `<title>Todos</title>`, ""}`, ""}

<div class="${"todos svelte-dmxqmd"}"><h1>Todos</h1>

	<form class="${"new svelte-dmxqmd"}" action="${"/todos.json"}" method="${"post"}"><input name="${"text"}" aria-label="${"Add todo"}" placeholder="${"+ tap to add a todo"}" class="${"svelte-dmxqmd"}"></form>

	${each(todos, (todo) => `<div class="${["todo svelte-dmxqmd", todo.done ? "done" : ""].join(" ").trim()}"><form action="${"/todos/" + escape(todo.uid) + ".json?_method=patch"}" method="${"post"}"><input type="${"hidden"}" name="${"done"}"${add_attribute("value", todo.done ? "" : "true", 0)} class="${"svelte-dmxqmd"}">
				<button class="${"toggle svelte-dmxqmd"}" aria-label="${"Mark todo as " + escape(todo.done ? "not done" : "done")}"></button></form>

			<form class="${"text svelte-dmxqmd"}" action="${"/todos/" + escape(todo.uid) + ".json?_method=patch"}" method="${"post"}"><input aria-label="${"Edit todo"}" type="${"text"}" name="${"text"}"${add_attribute("value", todo.text, 0)} class="${"svelte-dmxqmd"}">
				<button class="${"save svelte-dmxqmd"}" aria-label="${"Save todo"}"></button></form>

			<form action="${"/todos/" + escape(todo.uid) + ".json?_method=delete"}" method="${"post"}"><button class="${"delete svelte-dmxqmd"}" aria-label="${"Delete todo"}"></button></form>
		</div>`)}
</div>`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Todos,
  load
});
export { init, render };
